def label = "mypod-${UUID.randomUUID().toString()}"
podTemplate(label: label, yaml: """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: some-label-value
spec:
  containers:                                                                                
  - name: docker-go-java-maven                                                                             
    image: img.reg.3g:15000/docker-go-java-maven:3.9
    command:
    - cat
    tty: true
    volumeMounts:                                                                            
    - mountPath: /var/run/docker.sock                                                        
      name: docker-socket
    - mountPath: /root/.docker/config.json
      name: docker-config 
    - mountPath: /etc/docker/certs.d/artifact.paas.yp/domain.crt
      name:  docker-domain
  volumes:                                                                                   
  - name: docker-socket                                                                      
    hostPath:                                                                                
      path: /var/run/docker.sock 
  - name: docker-config                                                                      
    hostPath:                                                                                
      path: /root/.docker/config.json
  - name: docker-domain                                                                      
    hostPath:                                                                                
      path: /etc/docker/certs.d/artifact.paas.yp/domain.crt
) {
    node(label) {
        stage('Get a Golang project') {
            container('docker-go-java-maven') {
                stage('Build a Go project') {
                git url: 'http://gitlab.yeepay.com/chen.wu/test.git'
                    sh 'mkdir /home/build-shell'
                    sh 'mv * /home/build-shell/'
                }
                stage('test'){
                git url: 'http://gitlab.yeepay.com/chen.wu/paas-sandbox-hessian-chenwu.git'            
                sh "/bin/date +%Y%m%d%H%M%S > build_time"
                env.BUILD_TIME = readFile('build_time').trim()
                }
                stage('build && push jfrog'){
                    sh '/home/build-shell/ad_3g_build-jfrog.sh tomcat'
                }
                stage('Build and push image'){
                    sh '/home/build-shell/getConfig.sh'
                    sh './build-chen.sh'
                }
            }
        }
    }
}
